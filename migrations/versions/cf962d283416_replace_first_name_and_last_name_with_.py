"""Replace first_name and last_name with name

Revision ID: cf962d283416
Revises: 8120bdfd26fd
Create Date: 2025-10-16 16:16:34.776299

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cf962d283416'
down_revision = '8120bdfd26fd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Add name column as nullable first
        batch_op.add_column(sa.Column('name', sa.String(length=100), nullable=True))
    
    # Migrate data: combine first_name and last_name into name
    connection = op.get_bind()
    connection.execute(sa.text("UPDATE users SET name = first_name || ' ' || last_name"))
    
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Now make name non-nullable
        batch_op.alter_column('name', nullable=False)
        # Drop old columns
        batch_op.drop_column('first_name')
        batch_op.drop_column('last_name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Add back first_name and last_name as nullable first
        batch_op.add_column(sa.Column('last_name', sa.VARCHAR(length=50), nullable=True))
        batch_op.add_column(sa.Column('first_name', sa.VARCHAR(length=50), nullable=True))
    
    # Try to split name back into first_name and last_name (best effort)
    connection = op.get_bind()
    # Take first word as first_name, rest as last_name
    connection.execute(sa.text("""
        UPDATE users 
        SET first_name = SUBSTR(name, 1, INSTR(name || ' ', ' ') - 1),
            last_name = SUBSTR(name, INSTR(name || ' ', ' ') + 1)
        WHERE INSTR(name, ' ') > 0
    """))
    # For single-word names, use it as first_name and set last_name to empty
    connection.execute(sa.text("""
        UPDATE users 
        SET first_name = name,
            last_name = name
        WHERE INSTR(name, ' ') = 0
    """))
    
    with op.batch_alter_table('users', schema=None) as batch_op:
        # Make them non-nullable
        batch_op.alter_column('first_name', nullable=False)
        batch_op.alter_column('last_name', nullable=False)
        batch_op.drop_column('name')

    # ### end Alembic commands ###
